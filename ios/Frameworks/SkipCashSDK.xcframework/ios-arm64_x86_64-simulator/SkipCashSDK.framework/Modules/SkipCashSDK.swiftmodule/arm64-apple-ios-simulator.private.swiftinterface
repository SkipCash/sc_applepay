// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name SkipCashSDK
import CommonCrypto
import CryptoKit
import PassKit
@_exported import SkipCashSDK
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct ResultObject : Swift.Codable {
  public var isSuccess: Swift.Bool
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
@objc public class ResponseData : ObjectiveC.NSObject, Swift.Codable {
  public var paymentId: Swift.String?
  public var resultObj: SkipCashSDK.ResultObject
  public var returnCode: Swift.Int
  public var errorCode: Swift.Int
  public var errorMessage: Swift.String?
  public var error: Swift.String?
  public var validationErrors: Swift.String?
  public var hasError: Swift.Bool
  public var hasValidationError: Swift.Bool
  public init(paymentId: Swift.String?, resultObj: SkipCashSDK.ResultObject, returnCode: Swift.Int, errorCode: Swift.Int, errorMessage: Swift.String?, error: Swift.String?, validationErrors: Swift.String?, hasError: Swift.Bool, hasValidationError: Swift.Bool)
  public func getResultObjIsSuccess() -> Swift.Bool
  public func getPaymentId() -> Swift.String
  public func getErrorMessage() -> Swift.String
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
@objc public protocol ApplePayReponseDelegate {
  @objc func applePayResponseData(paymentID: Swift.String, isSuccess: Swift.Bool, token: Swift.String, returnCode: Swift.Int, errorMessage: Swift.String, completion: ((PassKit.PKPaymentAuthorizationResult) -> Swift.Void)?)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class SetupVC : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public var paymentToken: Swift.String
  @_Concurrency.MainActor(unsafe) public var paymentID: Swift.String
  @_Concurrency.MainActor(unsafe) public var delegate: (any SkipCashSDK.ApplePayReponseDelegate)?
  @_Concurrency.MainActor(unsafe) public var completion: ((PassKit.PKPaymentAuthorizationResult) -> Swift.Void)?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
